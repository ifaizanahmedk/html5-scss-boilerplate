//* Media Queries *//
@mixin media-xl {
    @media screen and (min-width: $laptop) {
        @content;
    }
}
@mixin media-lg {
    @media screen and (min-width: $tabletLg) {
        @content;
    }
}
@mixin media-md {
    @media screen and (min-width: $tablet) {
        @content;
    }
}
@mixin media-sm {
    @media screen and (min-width: $phone) {
        @content;
    }
}
@mixin media-xs {
    @media screen and (max-width: $phone) {
        @content;
    }
}
//* Defining px in rem *//
@mixin font-size($size) {
    font-size: px-to-rem($size);
}

@function px-to-rem($val: 16) {
    $remSize: ($val / $rootVal);
    @return ($remSize * 1rem);
}
//* Placeholder *//
@mixin placeholders($color, $size) {
    ::-webkit-input-placeholder {
        color: $color !important;
        @include font-size($size);
    }

    :-moz-placeholder {
        /* Firefox 18- */
        color: $color !important;
        @include font-size($size);
    }

    ::-moz-placeholder {
        /* Firefox 19+ */
        color: $color !important;
        @include font-size($size);
    }

    :-ms-input-placeholder {
        color: $color !important;
        @include font-size($size);
    }
}

//* Variable arguments for functions/mixins *//
@mixin config-button-bgcolors($prefix, $colors...) {
    @each $i in $colors {
        .#{$prefix}#{nth($i, 1)} {
            background-color: nth($i, 2);
            color: nth($i, 3);
            border: none;
        }
    }
}

//* Variable arguments for functions/mixins *//
@mixin config-justify-content($prefix, $position...) {
    @each $i in $position {
        .#{$prefix}#{nth($i, 1)} {
            display: -webkit-box;
            display: -ms-flexbox;
            display: -webkit-flex;
            display: flex;
            -webkit-box-pack: nth($i, 2) !important;
            -ms-flex-pack: nth($i, 2) !important;
            -webkit-justify-content: nth($i, 2) !important;
            justify-content: nth($i, 2) !important;
            -webkit-box-align: nth($i, 2) !important;
            -ms-flex-align: nth($i, 2) !important;
            -webkit-align-items: nth($i, 2) !important;
            align-items: nth($i, 2) !important;
        }
    }
}

@mixin display-flex() {
    display: -o-flex;
    display: -moz-flex;
    display: -ms-flex;
    display: -webkit-flex;
    display: flex;
}
@mixin flex-dir($direction) {
    -webkit-flex-direction: $direction;
    -moz-flex-direction: $direction;
    -ms-flex-direction: $direction;
    -o-flex-direction: $direction;
    -khtml-flex-direction: $direction;
    flex-direction: $direction;
}
@mixin flex-align($aln-pos) {
    -webkit-align-items: $aln-pos;
    -moz-align-items: $aln-pos;
    -ms-align-items: $aln-pos;
    -o-align-items: $aln-pos;
    -khtml-align-items: $aln-pos;
    align-items: $aln-pos;
}
@mixin flex-jus($jus-pos) {
    -webkit-justify-content: $jus-pos;
    -moz-justify-content: $jus-pos;
    -ms-justify-content: $jus-pos;
    -o-justify-content: $jus-pos;
    -khtml-justify-content: $jus-pos;
    justify-content: $jus-pos;
}

//* Variable arguments for functions/mixins *//
@mixin config-label-colors($prefix, $colors...) {
    @each $i in $colors {
        .#{$prefix}#{nth($i, 1)} {
            background-color: nth($i, 2);
            border: none;
        }
    }
}

//* Variable arguments for functions/mixins *//
@mixin config-text-colors($prefix, $colors...) {
    @each $i in $colors {
        .#{$prefix}#{nth($i, 1)} {
            color: nth($i, 2) !important;
        }
    }
}

//* Variable arguments for functions/mixins *//
@mixin config-bg-colors($prefix, $colors...) {
    @each $i in $colors {
        .#{$prefix}#{nth($i, 1)} {
            background-color: nth($i, 2) !important;
        }
    }
}

//* box shadows *//
@mixin box-shadow($shadows...) {
    -o-box-shadow: $shadows;
    -moz-box-shadow: $shadows;
    -webkit-box-shadow: $shadows;
    box-shadow: $shadows;
}

//* transform *//
@mixin transform($set...) {
    -moz-transform: $set;
    -webkit-transform: $set;
    -o-transform: $set;
    -ms-transform: $set;
    transform: $set;
}

//* transitions *//
@mixin transition($set...) {
    -webkit-transition: $set;
    -moz-transition: $set;
    -ms-transition: $set;
    -o-transition: $set;
    transition: $set;
}

//* clip path *//
@mixin clip-path($set...) {
    -webkit-clip-path: $set;
    -moz-clip-path: $set;
    -ms-clip-path: $set;
    -o-clip-path: $set;
    clip-path: $set;
}

//* Animation *//
@mixin animations($set...) {
    -webkit-animation: $set;
    -moz-animation: $set;
    -ms-animation: $set;
    -o-animation: $set;
    animation: $set;
}

//* Filter *//
@mixin filters($set...) {
    -webkit-filter: $set;
    -moz-filter: $set;
    -ms-filter: $set;
    -o-filter: $set;
    filter: $set;
}

//* text shadows *//
@mixin text-shadow($shadows...) {
    text-shadow: $shadows;
}

//* colors *//
@mixin colors($text, $background, $border) {
    color: $text;
    background-color: $background;
    border-color: $border;
}

//* scrollbar *//
@mixin scrollbar($to) {
    .#{$to}::-webkit-scrollbar-track {
        @include box-shadow(inset 0 0 6px rgba(0, 0, 0, 0.1));
        background-color: $theme__color--light3;
    }
    .#{$to}::-webkit-scrollbar {
        width: 0.5rem;
        background-color: $grey3;
    }
    .#{$to}::-webkit-scrollbar-thumb {
        background-color: $theme__color--light;
        background-image: -webkit-gradient(
            linear,
            40% 0%,
            75% 84%,
            from($yellow),
            to($yellow),
            color-stop(0.6, $theme__color--dark3)
        );
    }
}

//* custom values for custom classes *//
$spaceamounts: (
    0,
    5,
    10,
    15,
    20,
    25,
    30,
    35,
    40,
    45,
    50,
    55,
    60,
    65,
    70,
    75,
    80,
    85,
    90,
    95,
    100
); // Adjust this to include the pixel amounts you need.
$sides: (top, bottom, left, right); // Leave this variable alone
$position: (sticky, fixed, relative, absolute); // custom positions values
.m-auto {
    margin: auto;
}
.m-r-auto {
    margin-right: auto;
}
.m-l-auto {
    margin-left: auto;
}
.m-lr-auto {
    margin: 0 auto;
}
.m-tb-auto {
    margin: auto 0;
}
@each $space in $spaceamounts {
    //running loop to generate classes against pixels
    @each $side in $sides {
        //running loop to generate classes against pixels and sides

        //custom margins against sides
        .m-#{str-slice($side, 0, 1)}-#{$space} {
            margin-#{$side}: #{$space}px !important;
        }

        //custom paddings against sides
        .p-#{str-slice($side, 0, 1)}-#{$space} {
            padding-#{$side}: #{$space}px !important;
        }

        .border-#{str-slice($side, 0, 1)}-#{$space} {
            border-#{$side}: #{$space}px !important;
        }
    }

    //custom margin to all sides in rem
    .cust-mar-#{$space} {
        margin: #{$space}rem;
    }

    //custom padding to all sides in rem
    .cust-pad-#{$space} {
        padding: #{$space}rem;
    }

    //custom height class in vh
    .cust-h-#{$space} {
        //running loop to generate classes against pixels
        height: #{$space}vh;
    }

    //custom index class
    .cust-index-#{$space} {
        //running loop to generate classes against pixels
        z-index: #{$space} !important;
    }
}

@each $pos in $position {
    .cust-pos-#{$pos} {
        //creating custom position classes
        position: #{$pos} !important;
    }
}
